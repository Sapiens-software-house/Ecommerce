@inject IProductService ProductService
@implements IDisposable

@if (ProductService.Products == null || ProductService.Products.Products.Count == 0)
{
    <span>@ProductService.Message</span>
}
else
{
    @foreach (var item in ProductService.Products.Products)
    {
        <MudPaper Class="pa-4 ma-2 responsive d-inline-block" Elevation="5" Style="height:5%; width:20%; display: inline-block;">
            <MudCard Class="responsive">
                <MudCardContent Class="responsive">
                    <img class="responsive" src="@item.Images[0]" alt="teste">
                    <MudText Class="responsive" Typo="Typo.body2">@item.Name</MudText>
                </MudCardContent>
                <MudCardActions Class="responsive">
                    <MudButton Variant="Variant.Text" Color="Color.Primary">Details</MudButton>
                </MudCardActions>
            </MudCard>
         </MudPaper>
    }
}

@code {

    private bool arrows = true;
    private bool bullets = true;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;

    protected override void OnInitialized()
    {
        ProductService.GetProducts();
        ProductService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }

    #region mapper
    //private static List<Product> Products = new List<Product>
    //{
    //    new Product
    //    {
    //        id  =  "" // Id of product
    //        ,
    //        name = "" // Name of product
    //        ,
    //        type = "" // Type of product, currently it is always key
    //        ,
    //        slug = ""  // Slug of product
    //        ,
    //        qty = ""// Qty of product available to buy
    //        ,
    //        minQty = 1// Minimum product quantity available to buy
    //        ,
    //        retail_min_price = 1 // minimal product price for retail users in EUR with fees.
    //        ,
    //        retailMinBasePrice = 1 // minimal product price for retail users in EUR without fees. Price set by seller while adding offer.
    //        ,
    //        thumbnail = ""// Url to image
    //        ,
    //        smallImage = "" // Url to thumbnail image
    //        ,
    //        coverImage = "" // Url to cover image
    //        ,images = new List<Image>
    //        {
    //            new Image
    //            {
    //                url = "https://images.g2a.com/1024x768/1x1x0/marvels-spider-man-remastered-pc-steam-key-global-i10000302546004/799cf76f63324301a0b19a4a"
    //            }
    //        }// Url list to all images in full resolution
    //        ,
    //        updated_at = "" // 	date of last update
    //        ,
    //        release_date = "" // Product release date
    //        ,
    //        region = ""// Region of product eg. GLOBAL, EUROPE, AMERICA, NORTH AMERICA, RU/CIS, SOUTH EASTERN ASIA, WESTERN ASIA, GERMANY, INDIA, POLAND, UNITED KINGDOM etc.
    //        ,
    //        developer = ""// Developer name of product
    //        ,
    //        publisher = "" // Publisher name of product
    //        ,
    //        platform = "" // Platform eg. Steam, Origin, Uplay, GOG, Xbox, Apple, Gameforge, Oculus Rift, HTC Vive, PSN, Blizzard
    //        ,priceLimit = new PriceLimit
    //        {
    //            mim = 1
    //            ,
    //            max = 1
    //        }  // Price value possible to set while adding/updating offer. Higher than max or lower than min are not possible to use.
    //       ,restrictions = new Restriction
    //       {
    //            pegi_discrimination = false
    //            ,
    //            pegi_drugs = false
    //            ,
    //            pegi_fear = false
    //            ,
    //            pegi_gambling = false
    //            ,
    //            pegi_online = false
    //            ,
    //            pegi_sex = false
    //            ,
    //            pegi_profanity = false
    //            ,
    //            pegi_violence = false
    //       }  // PEGI restrictions
    //       ,requirements = new Requirement
    //       {
    //            Minimal =
    //                new Minimal
    //                {
    //                    reqdiskspace = ""
    //                    ,
    //                    reqgraphics = ""
    //                    ,
    //                    reqmemory = ""
    //                    ,
    //                    reqother = ""
    //                    ,
    //                    reqprocessor = ""
    //                    ,
    //                    reqsystem = ""
    //                }

    //            , Recommended =
    //                new Recommended
    //                {
    //                    reqdiskspace = ""
    //                    ,
    //                    reqgraphics = ""
    //                    ,
    //                    reqmemory = ""
    //                    ,
    //                    reqother = ""
    //                    ,
    //                    reqprocessor = ""
    //                    ,
    //                    reqsystem = ""
    //                }

    //       }// Requirements
    //       ,videos = new List<Video>
    //       {
    //           new Video
    //           {
    //                type = ""
    //                , url = ""
    //           }
    //           ,
    //       } // Videos
    //       ,categories = new List<Categories>
    //       {
    //            new Categories
    //           {
    //                Id = 0
    //                , name = ""
    //           }
    //       }  // Categories
    //    }
    //};
    #endregion    
}
